Total 1 file(s)
[CallGraph] Initializing 1 modules .
[CallGraph / 1] [cve.bc]

[CallGraph] Updated in 0 modules.
[CallGraph] Postprocessing ...
[CallGraph] Done!

[QualifierAnalysis] Initializing 1 modules .
[QualifierAnalysis / 1] [cve.bc]
==========Function main==========
Inside createNodeForGlobals:
1
2
4
4.5
4.55
4.56
4.57
1
2
4
4.5
4.55
4.56
4.57
4.6
4.7
4.8
4.9
5
Inside collectConstraintsForGlobals:
inside compute aa set:
  %1 = alloca i32, align 4
  %backlog = alloca %struct.test_struct*, align 8
  store i32 0, i32* %1, align 4
  %2 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
  %3 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %2, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
  %5 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10
  %9 = load %struct.test_struct*, %struct.test_struct** @init, align 8
  store %struct.test_struct* %9, %struct.test_struct** %backlog, align 8
  br label %10
  %11 = load %struct.test_struct*, %struct.test_struct** %backlog, align 8
  %12 = getelementptr inbounds %struct.test_struct, %struct.test_struct* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18
  %16 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
  %17 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %16, i32 0, i32 0
  store i32 0, i32* %17, align 4
  br label %18
  ret i32 0
Inside qualifier inference:
  %1 = alloca i32, align 4
  %1 = alloca i32, align 4
related qualifier out[9] = 1
  %backlog = alloca %struct.test_struct*, align 8
  %backlog = alloca %struct.test_struct*, align 8
related qualifier out[10] = 1
  store i32 0, i32* %1, align 4
  store i32 0, i32* %1, align 4
related qualifier out[33] = 1
  %2 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
  %2 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
related qualifier out[12] = 1
  %3 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %2, i32 0, i32 0
  %3 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %2, i32 0, i32 0
related qualifier out[13] = 1
  store i32 1, i32* %3, align 4
  store i32 1, i32* %3, align 4
  %4 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
  %4 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
related qualifier out[15] = 1
  %5 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %4, i32 0, i32 0
  %5 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %4, i32 0, i32 0
related qualifier out[16] = 1
  %6 = load i32, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
related qualifier out[17] = 1
  %7 = icmp eq i32 %6, 0
  %7 = icmp eq i32 %6, 0
related qualifier out[18] = 1
  br i1 %7, label %8, label %10
  br i1 %7, label %8, label %10
  %9 = load %struct.test_struct*, %struct.test_struct** @init, align 8
  %9 = load %struct.test_struct*, %struct.test_struct** @init, align 8
related qualifier out[20] = 1
  store %struct.test_struct* %9, %struct.test_struct** %backlog, align 8
  store %struct.test_struct* %9, %struct.test_struct** %backlog, align 8
related qualifier out[34] = 1
  br label %10
  br label %10
  %11 = load %struct.test_struct*, %struct.test_struct** %backlog, align 8
  %11 = load %struct.test_struct*, %struct.test_struct** %backlog, align 8
related qualifier out[23] = 0
  %12 = getelementptr inbounds %struct.test_struct, %struct.test_struct* %11, i32 0, i32 0
  %12 = getelementptr inbounds %struct.test_struct, %struct.test_struct* %11, i32 0, i32 0
related qualifier out[24] = 0
  %13 = load i32, i32* %12, align 4
  %13 = load i32, i32* %12, align 4
related qualifier out[25] = 0
  %14 = icmp ne i32 %13, 0
  %14 = icmp ne i32 %13, 0
related qualifier out[26] = 0
  br i1 %14, label %15, label %18
  br i1 %14, label %15, label %18
  %16 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
  %16 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
related qualifier out[28] = 1
  %17 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %16, i32 0, i32 0
  %17 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %16, i32 0, i32 0
related qualifier out[29] = 1
  store i32 0, i32* %17, align 4
  store i32 0, i32* %17, align 4
  br label %18
  br label %18
  ret i32 0
  ret i32 0
Inside QualifierCheck:
  %1 = alloca i32, align 4
  %backlog = alloca %struct.test_struct*, align 8
  store i32 0, i32* %1, align 4
  %2 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
opIdx = 4, qualifier = 1
  %3 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %2, i32 0, i32 0
opIdx = 12, qualifier = 1
  store i32 1, i32* %3, align 4
  %4 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
opIdx = 4, qualifier = 1
  %5 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %4, i32 0, i32 0
opIdx = 15, qualifier = 1
  %6 = load i32, i32* %5, align 4
opIdx = 16, qualifier = 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10
  %9 = load %struct.test_struct*, %struct.test_struct** @init, align 8
opIdx = 6, qualifier = 1
  store %struct.test_struct* %9, %struct.test_struct** %backlog, align 8
  br label %10
  %11 = load %struct.test_struct*, %struct.test_struct** %backlog, align 8
opIdx = 10, qualifier = 1
  %12 = getelementptr inbounds %struct.test_struct, %struct.test_struct* %11, i32 0, i32 0
opIdx = 23, qualifier = 0
***********Warning: potentail uninitialized ptr  %11 = load %struct.test_struct*, %struct.test_struct** %backlog, align 8
[trace] In function @main Instruction:  %12 = getelementptr inbounds %struct.test_struct, %struct.test_struct* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
opIdx = 24, qualifier = 0
***********Warning: potentail uninitialized ptr  %12 = getelementptr inbounds %struct.test_struct, %struct.test_struct* %11, i32 0, i32 0
[trace] In function @main Instruction:  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 0
aa:25 is uninitialized
***********Warning: uninitialized ptr   %13 = load i32, i32* %12, align 4
[trace] In function @main Instruction:  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18
  %16 = load %struct.aStruct*, %struct.aStruct** @cpg, align 8
opIdx = 4, qualifier = 1
  %17 = getelementptr inbounds %struct.aStruct, %struct.aStruct* %16, i32 0, i32 0
opIdx = 28, qualifier = 1
  store i32 0, i32* %17, align 4
  br label %18
  ret i32 0
Qualifer Check Finished
1 Function Finished!
function analysis done!
	 [CHANGED]
[QualifierAnalysis] Updated in 1 modules.
[QualifierAnalysis / 2] [cve.bc]

[QualifierAnalysis] Updated in 0 modules.
[QualifierAnalysis] Postprocessing ...
[QualifierAnalysis] Done!

